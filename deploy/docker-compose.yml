version: '3.8'

services:
  postgres:
    image: postgres:15.1
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/templates/default.conf.template
      - /etc/letsencrypt:/etc/letsencrypt
    env_file:
      - .env
    networks:
      - net
    restart: unless-stopped

  bot:
    build:
      context: ..
      dockerfile: deploy/dockerfile
    container_name: bot
    expose:
      - "${APP_PORT}"
    volumes:
      - ./logs:/logs
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - net
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: frontend
    expose:
      - "7070"
    networks:
      - net
    restart: unless-stopped
    
networks:
  net:
    driver: bridge
